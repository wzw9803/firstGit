1、设置你的名字和Email地址
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
注意gitconfig命令的--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。

2、通过git init命令把这个目录变成Git可以管理的仓库：
$ git init
Initialized empty Git repository in /Users/michael/learngit/.git/

3、查看仓库当前的状态
$ git status

4、将文件提交到git仓库
（1）用命令git add告诉Git，把文件添加到仓库：git add <文件名>
	$ git add readme.txt
（2）第二步，用命令git commit告诉Git，把文件提交到仓库：git commit -m <描述>
	$ git commit -m "wrote a readme file"
	[master (root-commit) eaadf4e] wrote a readme file
	1 file changed, 2 insertions(+)
	create mode 100644 readme.txt
可以一次提交很多文件：
$ git add file1.txt
$ git add file2.txt file3.txt
$ git commit -m "add 3 files."

5、当对文件有了修改后：
（1）$ git status 查看仓库当前的状态
（2）$ git diff readme.txt 查看具体修改了什么内容，git diff HEAD -- readme.txt 查看工作区和版本库里面最新版本的区别
（3）$ git add readme.txt 将文件添加到git仓库
（4）$ git commit -m "add distributed" 将文件提交到git仓库
（5）$ git status 查看仓库当前的状态

6、版本切换
（1）$ git log 命令显示从最近到最远的提交日志，我们可以看到3次提交，最近的一次是append GPL，上一次是add distributed，最早的一次是wrote a readme file。
	如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数。
	你看到的一大串类似1094adb...的是commit id（版本号），很重要。
（2）回退到上一版本：                 										   
	首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交1094adb...（注意我的提交ID和你的肯定不一样），
	上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。
	$ git reset --hard HEAD^
	HEAD is now at e475afc add distributed
（3）回到指定版本（找到指定版本的commit id就可以）
	$ git reset --hard 1094a（id号不用写全，可以分辨就好）
	HEAD is now at 83b0afe append GPL
	如果向上找不到commit id，不要着急：
	$ git reflog
	e475afc HEAD@{1}: reset: moving to HEAD^
	1094adb (HEAD -> master) HEAD@{2}: commit: append GPL
	e475afc HEAD@{3}: commit: add distributed
	eaadf4e HEAD@{4}: commit (initial): wrote a readme file
	要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。
	
	
	
	
	
	
	
	
	
	
	